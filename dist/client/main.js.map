{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/analytics-page/analytics-page.component.css","webpack:///./src/app/analytics-page/analytics-page.component.html","webpack:///./src/app/analytics-page/analytics-page.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categories-page/categories-form/categories-form.component.css","webpack:///./src/app/categories-page/categories-form/categories-form.component.html","webpack:///./src/app/categories-page/categories-form/categories-form.component.ts","webpack:///./src/app/categories-page/categories-form/positions-form/positions-form.component.css","webpack:///./src/app/categories-page/categories-form/positions-form/positions-form.component.html","webpack:///./src/app/categories-page/categories-form/positions-form/positions-form.component.ts","webpack:///./src/app/categories-page/categories-page.component.css","webpack:///./src/app/categories-page/categories-page.component.html","webpack:///./src/app/categories-page/categories-page.component.ts","webpack:///./src/app/history-page/history-filter/history-filter.component.css","webpack:///./src/app/history-page/history-filter/history-filter.component.html","webpack:///./src/app/history-page/history-filter/history-filter.component.ts","webpack:///./src/app/history-page/history-list/history-list.component.css","webpack:///./src/app/history-page/history-list/history-list.component.html","webpack:///./src/app/history-page/history-list/history-list.component.ts","webpack:///./src/app/history-page/history-page.component.css","webpack:///./src/app/history-page/history-page.component.html","webpack:///./src/app/history-page/history-page.component.ts","webpack:///./src/app/login-page/login-page.component.css","webpack:///./src/app/login-page/login-page.component.html","webpack:///./src/app/login-page/login-page.component.ts","webpack:///./src/app/order-page/order-categories/order-categories.component.css","webpack:///./src/app/order-page/order-categories/order-categories.component.html","webpack:///./src/app/order-page/order-categories/order-categories.component.ts","webpack:///./src/app/order-page/order-page.component.css","webpack:///./src/app/order-page/order-page.component.html","webpack:///./src/app/order-page/order-page.component.ts","webpack:///./src/app/order-page/order-positions/order-positions.component.css","webpack:///./src/app/order-page/order-positions/order-positions.component.html","webpack:///./src/app/order-page/order-positions/order-positions.component.ts","webpack:///./src/app/order-page/order.service.ts","webpack:///./src/app/overview-page/overview-page.component.css","webpack:///./src/app/overview-page/overview-page.component.html","webpack:///./src/app/overview-page/overview-page.component.ts","webpack:///./src/app/register-page/register-page.component.css","webpack:///./src/app/register-page/register-page.component.html","webpack:///./src/app/register-page/register-page.component.ts","webpack:///./src/app/shared/classes/auth.guard.ts","webpack:///./src/app/shared/classes/material.services.ts","webpack:///./src/app/shared/classes/positions.service.ts","webpack:///./src/app/shared/classes/token.interseptor.ts","webpack:///./src/app/shared/components/loader/loader.component.css","webpack:///./src/app/shared/components/loader/loader.component.html","webpack:///./src/app/shared/components/loader/loader.component.ts","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.css","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.html","webpack:///./src/app/shared/layouts/auth-layout/auth-layout.component.ts","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.css","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.html","webpack:///./src/app/shared/layouts/site-layout/site-layout.component.ts","webpack:///./src/app/shared/services/analytics.services.ts","webpack:///./src/app/shared/services/auth.servisec.ts","webpack:///./src/app/shared/services/categories.service.ts","webpack:///./src/app/shared/services/orders.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FuYWx5dGljcy1wYWdlL2FuYWx5dGljcy1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-title\\\">\\n  <h4>Аналитика</h4>\\n</div>\\n\\n<div [style.display]=\\\"pending ? 'node' : 'block' \\\">\\n  <div class=\\\"average-price\\\">\\n    <p>Средний чек <strong>{{ average }} р.</strong></p>\\n  </div>\\n\\n  <div class=\\\"analytics-block pb3\\\">\\n    <h5>Выручка</h5>\\n    <canvas #gain></canvas>\\n  </div>\\n\\n  <div class=\\\"analytics-block\\\">\\n    <h5>Заказы</h5>\\n    <canvas #order></canvas>\\n  </div>\\n</div>\\n\\n\\n<app-loader *ngIf=\\\"pending\\\"></app-loader>\\n\\n\\n\"","import { Component,  ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { AnalyticsService } from '../shared/services/analytics.services';\nimport { AnalyticsPage } from '../shared/interfaces';\nimport { Subscription } from 'rxjs';\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-analytics-page',\n  templateUrl: './analytics-page.component.html',\n  styleUrls: ['./analytics-page.component.css']\n})\nexport class AnalyticsPageComponent implements AfterViewInit, OnDestroy {\n\n  @ViewChild('gain') gainRef: ElementRef\n  @ViewChild('order') orderRef: ElementRef\n\n  average: number\n  pending = true\n  aSub: Subscription\n\n\n  constructor(private service: AnalyticsService) { }\n\n  ngAfterViewInit(){\n    // отрисовываем превый график для выручки\n    const gainConfig: any = {\n      label: 'Выручка',\n      color: 'rgb(255,99,132)'\n    }\n\n    const orderConfig: any = {\n      label: 'Заказы',\n      color: 'rgb(54,162,235)'\n    }\n\n    this.aSub = this.service.getAnalytics().subscribe( (data: AnalyticsPage) => {\n      //console.log(data)\n      this.average = data.average\n      // для графиков\n      gainConfig.labels = data.chart.map( item => item.label)\n      gainConfig.data = data.chart.map( item => item.gain)\n\n      orderConfig.labels = data.chart.map( item => item.label)\n      orderConfig.data = data.chart.map( item => item.order)\n\n      // оживляем графики\n      const gainCtx = this.gainRef.nativeElement.getContext('2d')\n      const orderCtx = this.orderRef.nativeElement.getContext('2d')\n      gainCtx.canvas.height = '300px'\n      orderCtx.canvas.height = '300px'\n      // графики\n      new Chart(gainCtx, createChartConfig(gainConfig))\n      new Chart(orderCtx, createChartConfig(orderConfig))\n\n\n      this.pending = false\n    })\n  }\n\n  ngOnDestroy(){\n    if(this.aSub){\n      this.aSub.unsubscribe()\n    }\n\n  }\n}\n\n\nfunction createChartConfig({labels, data, label, color}){\n  // конфигурируем графиков\n  return {\n    type: 'line',\n    options: {\n      responsive: true\n    },\n    data: {\n      labels,\n      datasets: [\n        {\n          label, data,\n          borderColor: color,\n          steppedLine: false,\n          fill: false\n        }\n      ]\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component';\r\nimport { AuthLayoutComponent } from './shared/layouts/auth-layout/auth-layout.component';\r\nimport { SiteLayoutComponent } from './shared/layouts/site-layout/site-layout.component';\r\nimport { AuthGuard } from './shared/classes/auth.guard';\r\nimport { OverviewPageComponent } from './overview-page/overview-page.component';\r\nimport { AnalyticsPageComponent } from './analytics-page/analytics-page.component';\r\nimport { HistoryPageComponent } from './history-page/history-page.component';\r\nimport { OrderPageComponent } from './order-page/order-page.component';\r\nimport { CategoriesPageComponent } from './categories-page/categories-page.component';\r\nimport { CategoriesFormComponent } from './categories-page/categories-form/categories-form.component';\r\nimport { OrderCategoriesComponent } from './order-page/order-categories/order-categories.component';\r\nimport { OrderPositionsComponent } from './order-page/order-positions/order-positions.component';\r\n\r\n\r\n// файл роутинга\r\n// регистрируем роуты нашего приложения\r\n\r\n// в данном модуле мы будем описсывать все что относится к нашему приложению\r\n// RouterModule позволяет реализовывать навигацию всех страниц\r\n// forRoot - регистрируем все роуты\r\n// Routes специальные типы для массива, наверно typescript тема\r\n// два корневых роута\r\n// { path: '', redirectTo: '/login'}, если путь совпал делаем редирект\r\n// pathMatch - сопадают поностью\r\n// canActivate - подключаем гвард роутов\r\nconst routes: Routes =  [\r\n  {\r\n    path: '',\r\n    component: AuthLayoutComponent,\r\n    children: [\r\n      { path: '', redirectTo: '/login', pathMatch: 'full'},\r\n      { path: 'login', component: LoginPageComponent},\r\n      { path: 'register', component: RegisterPageComponent},\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: SiteLayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'overview', component: OverviewPageComponent},\r\n      {path: 'analytics', component: AnalyticsPageComponent},\r\n      {path: 'history', component: HistoryPageComponent},\r\n      {path: 'order', component: OrderPageComponent, children: [\r\n        {path: '', component: OrderCategoriesComponent},\r\n        {path: ':id', component: OrderPositionsComponent},\r\n      ]},\r\n      {path: 'categories', component: CategoriesPageComponent},\r\n      {path: 'categories/new', component: CategoriesFormComponent},\r\n      {path: 'categories/:id', component: CategoriesFormComponent}\r\n    ]\r\n  }\r\n];\r\n// imports - конфигурирует модуль\r\n// exports - експеоритует\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\n\r\n\r\n// експортируем класс\r\n// сущности определяются через дикораторы\r\n// данный модуль регистриуем в app.component\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './shared/services/auth.servisec';\n\n@Component({\n  selector: 'app-root',\n  // templateUrl: './app.component.html',\n  template: '<router-outlet></router-outlet>',\n  // styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  // логика если есть валдный элемент в локал сторедже то автоматически будем задавать токен в наш сервес\n  constructor(private auth: AuthService){\n\n  }\n\n  // при создания приложения проверяем локал сторенд если он не пуст то заносим в сервес\n  // в headerah Должен быть поле авторизация с токеном\n  ngOnInit(){\n    const potentialToken = localStorage.getItem('auth-token')\n    if(potentialToken !== null){\n      this.auth.setToken(potentialToken)\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n// FormsModule - позволяет добавлят ng model ,  ReactiveFormsModule - добавляет функционал для обработки различных форм в наш приложении\n// HttpClientModule - для http запросов\n\n// импортированние компонета\nimport { LoginPageComponent } from './login-page/login-page.component';\n// экспортируем роуты и добавляем в главный компонент\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthLayoutComponent } from './shared/layouts/auth-layout/auth-layout.component';\nimport { SiteLayoutComponent } from './shared/layouts/site-layout/site-layout.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { TokenInterceptor } from './shared/classes/token.interseptor';\nimport { OverviewPageComponent } from './overview-page/overview-page.component';\nimport { AnalyticsPageComponent } from './analytics-page/analytics-page.component';\nimport { HistoryPageComponent } from './history-page/history-page.component';\nimport { OrderPageComponent } from './order-page/order-page.component';\nimport { CategoriesPageComponent } from './categories-page/categories-page.component';\nimport { LoaderComponent } from './shared/components/loader/loader.component';\nimport { CategoriesFormComponent } from './categories-page/categories-form/categories-form.component';\nimport { PositionsFormComponent } from './categories-page/categories-form/positions-form/positions-form.component';\nimport { OrderCategoriesComponent } from './order-page/order-categories/order-categories.component';\nimport { OrderPositionsComponent } from './order-page/order-positions/order-positions.component';\nimport { HistoryListComponent } from './history-page/history-list/history-list.component';\nimport { HistoryFilterComponent } from './history-page/history-filter/history-filter.component';\n\n// NgModule - описывает компоненты - declarations - определение некторых компонентов регистрация\n// LoginPageComponent - сгенерированный модуль\n// useClass: TokenInterceptor- регистрируем токен интерсептор\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    AuthLayoutComponent,\n    SiteLayoutComponent,\n    RegisterPageComponent,\n    OverviewPageComponent,\n    AnalyticsPageComponent,\n    HistoryPageComponent,\n    OrderPageComponent,\n    CategoriesPageComponent,\n    LoaderComponent,\n    CategoriesFormComponent,\n    PositionsFormComponent,\n    OrderCategoriesComponent,\n    OrderPositionsComponent,\n    HistoryListComponent,\n    HistoryFilterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".dn{\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.h200{\\r\\n  height: 200px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0ZWdvcmllcy1wYWdlL2NhdGVnb3JpZXMtZm9ybS9jYXRlZ29yaWVzLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7Q0FDZjs7QUFFRDtFQUNFLGNBQWM7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMtcGFnZS9jYXRlZ29yaWVzLWZvcm0vY2F0ZWdvcmllcy1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZG57XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmgyMDB7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"page-title\\\">\\n    <h4>\\n        <a routerLink=\\\"/categories\\\">Категории</a>\\n        <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n        {{  isNew ? 'Добавить': 'Редактировать' }} категорию\\n    </h4>\\n    <span>\\n      <!-- удаление категорий -->\\n        <button class=\\\"btn btn-small red\\\"\\n        (click)=\\\"deleteCategory()\\\"\\n        *ngIf=\\\"!isNew\\\"\\n        >\\n          <i class=\\\"material-icons\\\">delete</i>\\n        </button>\\n      </span>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <!-- инициализируем рективную форму [formGroup]=\\\"form\\\"-->\\n    <form class=\\\"col s12 l6\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"input-field\\\">\\n            <input\\n              id=\\\"name\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"name\\\"\\n              [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched }\\\"\\n            >\\n            <label for=\\\"name\\\">Название</label>\\n            <span\\n              class=\\\"helper-text red-text\\\"\\n              *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\"\\n            >\\n            <span *ngIf=\\\"form.get('name').errors['required']\\\">Заполните имя категории</span>\\n          </span>\\n        </div>\\n\\n        <div>\\n          <!-- инпут для загрузки файлов -->\\n          <!-- change - метод вызывится если есть какой либо файл -->\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"dn\\\"\\n              (change)=\\\"onFileUpload($event)\\\"\\n              #input\\n            >\\n            <!-- type=\\\"button\\\" - обычная кнопка которую не нужно обрабатывать -->\\n            <button\\n              (click)=\\\"triggerClick()\\\"\\n              [disabled]=\\\"form.disabled\\\"\\n              type=\\\"button\\\"\\n              class=\\\"waves-effect waves-light btn orange lighten-2 mb2\\\"\\n            >\\n                <i class=\\\"material-icons left\\\">backup</i>\\n                Загрузить изображение\\n            </button>\\n        </div>\\n\\n        <div>\\n            <!-- type=\\\"submit\\\" - должна сохранять всю форму -->\\n            <button\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"form.invalid || form.disabled\\\"\\n              class=\\\"waves-effect waves-light btn\\\"\\n            >\\n                Сохранить изменения\\n            </button>\\n        </div>\\n    </form>\\n\\n    <div class=\\\"col s12 l4 center\\\">\\n        <img\\n          class=\\\"responsive-img h200\\\"\\n          [src]=\\\"imagePreview\\\"\\n          *ngIf=\\\"imagePreview\\\"\\n        >\\n    </div>\\n</div>\\n\\n<!-- передаем в данный компонент пропсы айди категории -->\\n<app-positions-form\\n*ngIf=\\\"category?._id\\\"\\n  [categoryId]=\\\"category._id\\\"\\n></app-positions-form>\\n\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CategoriesService } from 'src/app/shared/services/categories.service';\nimport { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { MaterialService } from 'src/app/shared/classes/material.services';\nimport { Category } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-categories-form',\n  templateUrl: './categories-form.component.html',\n  styleUrls: ['./categories-form.component.css']\n})\nexport class CategoriesFormComponent implements OnInit {\n  // получаем доступк к инпуту файлов\n  @ViewChild('input') inputRef: ElementRef\n\n  image: File\n  imagePreview: any = ''\n  form: FormGroup\n  isNew = true\n  category: Category\n\n  constructor(private route: ActivatedRoute,\n              private categoriesService: CategoriesService,\n              private router: Router) { }\n\n\n\n  ngOnInit() {\n    // определяем рективную форму это назание добавление позиции\n    this.form = new FormGroup({\n      // 1- name , valid -2\n      name: new FormControl(null, Validators.required)\n    })\n\n    // по параметру юрл запроса определять добавление категории или ее редактирование , если есть айди категории значит редактировать\n    // старый подкход к решению проблемы\n    // this.route.params.subscribe( (params: Params) => {\n    //   if (params['id']) {\n    //     // мы редактируем форму\n    //     this.isNew = false\n    //   }\n    // })\n\n    this.form.disable()\n\n    // делам последовательные запросы\n    this.route.params\n      .pipe(\n        // как тольок прочитаем метод парамс мы хотим выполнить асинхронный стрим\n        switchMap(\n          (params: Params ) => {\n            if(params['id']){\n              // мы редактируем форму\n              this.isNew = false\n              // возвращяем новый стрим\n              return this.categoriesService.getById(params['id'])\n            }\n\n            // если нету айди то возращем стрим так надо для свичмар\n            return of(null)\n          }\n        )\n      )\n      // подписываемся на результирующий стрим\n      .subscribe(\n        (category: Category) => {\n          //если категория есть\n          if(category){\n            this.category = category\n            // динамическое изменение формы для редактирование данных\n            this.form.patchValue({\n              name: category.name\n            })\n            // достаем картинку если есть и делаем превью для стринцы\n            this.imagePreview = category.imageSrc\n            // ошивляем инпуты добавляем фокус\n            MaterialService.updateTextInputs()\n          }\n          this.form.enable()\n        },\n        error => MaterialService.toast(error.error.message)\n      )\n\n  }\n\n  // удаление категорий\n  deleteCategory(){\n    const decision = window.confirm(`Вы уверены, что хотите удалить категорию? ${this.category.name}`)\n    if(decision){\n      // удаляем категорию\n      this.categoriesService.delete(this.category._id)\n      .subscribe(\n        (responce) => {MaterialService.toast(responce.message)},\n        error => MaterialService.toast(error.error.message),\n        // колбек который вызывается когда завершен стрим, редиректим с удаленной страницы\n        () => this.router.navigate(['/categories'])\n      )\n    }\n  }\n\n  // при клике на кнопку загрузить избр стригереть инпут файл\n  triggerClick(){\n    // триггереим инпут по клику\n    this.inputRef.nativeElement.click()\n  }\n\n  onFileUpload(event: any){\n    // получаем доступ к файлу который мы загрузили\n    const file = event.target.files[0]\n    this.image = file\n\n    // нужно показать превью данной картинки\n    const reader = new FileReader()\n\n    // данный метод вызовится тогда когда загрузится вся картинка\n    reader.onload = () => {\n      this.imagePreview = reader.result\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  onSubmit(){\n\n      let obs$\n      this.form.disable()\n\n      //нужно одновременно обработать два этих стрима\n      if (this.isNew){\n        // create\n        obs$ = this.categoriesService.create(this.form.value.name, this.image)\n      } else {\n        // update\n        obs$ = this.categoriesService.update(this.category._id, this.form.value.name, this.image)\n      }\n\n      obs$.subscribe(\n        (category) => {\n          // присвоиваем категории новыую кторую мы измененили получаем актульаные данные\n          this.category = category\n          MaterialService.toast('Изменения сохранены')\n          this.form.enable()\n        },\n        error => {\n          MaterialService.toast(error)\n          this.form.enable()\n        }\n      )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMtcGFnZS9jYXRlZ29yaWVzLWZvcm0vcG9zaXRpb25zLWZvcm0vcG9zaXRpb25zLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col s12\\\">\\n        <div class=\\\"page-subtitle\\\">\\n            <h4>Позиции:</h4>\\n            <button\\n              class=\\\"waves-effect waves-light btn grey darken-1 btn-small\\\"\\n              (click)=\\\"onAddPosition()\\\"\\n            >\\n                Добавить позицию\\n            </button>\\n        </div>\\n        <!-- если есть загрузка данных то показываем  лоадер  иначе данные -->\\n        <div *ngIf=\\\"!loading; else loader\\\">\\n          <div class=\\\"collection\\\" *ngIf=\\\"positions.length !== 0; else empty\\\">\\n              <a\\n                *ngFor=\\\"let position of positions\\\"\\n                class=\\\"collection-item collection-item-icon\\\"\\n                (click)=\\\"onSelectPosition(position)\\\"\\n              >\\n                  <span>\\n                      {{position.name}} <strong>{{ position.cost }} руб.</strong>\\n                  </span>\\n                  <span>\\n                    <!-- при нажатия на кнопку остановит погружение на для этого передаем итема чтобы не вызывать окно  -->\\n                      <i\\n                        class=\\\"material-icons\\\"\\n                        (click)=\\\"onDeletePosition($event, position)\\\"\\n                      >delete</i>\\n                  </span>\\n              </a>\\n          </div>\\n          <!-- если нету колеллекций -->\\n          <ng-template #empty>\\n            <div class=\\\"center\\\">\\n              В категории отсутствуют позиции\\n            </div>\\n          </ng-template>\\n\\n        </div>\\n        <!-- лоадер -->\\n        <ng-template #loader>\\n          <app-loader></app-loader>\\n        </ng-template>\\n    </div>\\n</div>\\n\\n\\n<!-- MODAL -->\\n<!-- дем референцию модал чтобы можно управлять модальным окном - #modal -->\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"modal\\\" #modal>\\n      <div class=\\\"modal-content\\\">\\n          <h4 class=\\\"mb1\\\">Добавить позицию</h4>\\n          <div class=\\\"input-field\\\">\\n              <input\\n                id=\\\"pos-name\\\" type=\\\"text\\\"\\n                formControlName=\\\"name\\\"\\n                [ngClass]=\\\"{'invalid': form.get('name').invalid && form.get('name').touched}\\\"\\n              >\\n              <label for=\\\"pos-name\\\">Название</label>\\n              <span\\n                class=\\\"helper-text red-text\\\"\\n                *ngIf=\\\"form.get('name').invalid && form.get('name').touched\\\"\\n              >Заполните название позиции.</span>\\n          </div>\\n          <div class=\\\"input-field\\\">\\n              <input\\n              id=\\\"pos-cost\\\"\\n              type=\\\"number\\\"\\n              min=\\\"1\\\"\\n              formControlName=\\\"cost\\\"\\n              [ngClass]=\\\"{'invalid': form.get('cost').invalid && form.get('cost').touched}\\\"\\n              >\\n              <label for=\\\"pos-cost\\\">Цена</label>\\n              <span\\n              class=\\\"helper-text red-text\\\"\\n              *ngIf=\\\"form.get('cost').invalid && form.get('cost').touched\\\"\\n            >Введите корректную цену.</span>\\n          </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n          <!-- type=\\\"button\\\" чтобы нажималсь кнопка а не отправлялась форма -->\\n          <button\\n            type=\\\"button\\\"\\n            (click)=\\\"onCancel()\\\"\\n            class=\\\"modal-action waves-effect waves-black btn-flat\\\"\\n            [disabled]=\\\"form.disabled\\\"\\n          >Отмена</button>\\n          <!-- type=\\\"submit\\\" - отправляет форму -->\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"modal-action btn waves-effect\\\"\\n            [disabled]=\\\"form.invalid || form.disabled\\\"\\n          >Сохранить</button>\\n      </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { PositionsService } from 'src/app/shared/classes/positions.service';\nimport { Position } from '../../../shared/interfaces';\nimport { MaterialService, MaterialInstance } from 'src/app/shared/classes/material.services';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-positions-form',\n  templateUrl: './positions-form.component.html',\n  styleUrls: ['./positions-form.component.css']\n})\n// AfterViewInit - вызываем метод в том случае когда загрузится контент\n// OnDestroy - уничтожалась\nexport class PositionsFormComponent implements OnInit, AfterViewInit, OnDestroy {\n  // Данный компонеты ожидает парметр\n  @Input('categoryId') categoryId: string\n  // получаем достпук референции модального окна\n  @ViewChild('modal') modalRef: ElementRef\n  positions: Position[] = []\n  loading = false\n  modal: MaterialInstance\n  form: FormGroup\n  // проверка на редактировании записи или на добавление\n  positionId = null\n\n  constructor(private positionsService: PositionsService) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      cost: new FormControl(null, [Validators.required, Validators.min(1)])\n    })\n\n    this.loading = true\n    // debugger - Для отлова ошибок\n    // debugger\n    this.positionsService.fetch(this.categoryId).subscribe(\n      positions => {\n        this.positions = positions\n        this.loading = false\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    // уничтожаем окно после закрытия копонента\n    this.modal.destroy()\n  }\n\n  ngAfterViewInit() {\n    // в сервес передаем референцию модального окна что бы им управлять\n    this.modal = MaterialService.initModal(this.modalRef)\n  }\n\n  // открытие модального окна имеющиися позиции\n  onSelectPosition(position: Position){\n    // проверяем на редактировании\n    this.positionId = position._id\n    // метод динамически изменяет значени\n    this.form.patchValue({\n      name: position.name,\n      cost: position.cost\n    })\n    this.modal.open()\n    // обновляем инпуты при редактриовании\n    MaterialService.updateTextInputs()\n\n  }\n  // открыть модальное окно новое\n  onAddPosition(){\n    // добавление позиции\n    this.positionId = null\n    // метод динамически изменяет значени\n    this.form.reset({\n      name: '',\n      cost: 1\n    })\n    this.modal.open()\n    // обновляем инпуты при редактриовании\n    MaterialService.updateTextInputs()\n    this.modal.open()\n    // данный метод обновляет значение формы\n  }\n  // закрытия окна\n  onCancel(){\n    this.modal.close()\n  }\n  // удаление позиции\n  onDeletePosition(event: Event ,position: Position){\n    // останавливаем погружени\n    event.stopPropagation()\n\n    const decision = window.confirm(`Удалить позицию \"${position.name}\" ?`);\n    if(decision){\n      this.positionsService.delete(position).subscribe(\n        res => {\n          // редактируем массив\n          const idx = this.positions.findIndex( p => p._id === position._id)\n          this.positions.splice(idx, 1);\n          MaterialService.toast(res.message)\n        },\n        error => MaterialService.toast(error.error.message)\n      )\n    }\n  }\n\n  // отправка формы\n  onSubmit(){\n    // отключаем форму работаем с сервером\n    this.form.disable()\n    const position: Position = {\n      name: this.form.value.name,\n      cost: this.form.value.cost,\n      category: this.categoryId\n    }\n\n    if(this.positionId) {\n      position._id = this.positionId\n      this.positionsService.update(position).subscribe(\n        newPosition => {\n          // находим позицию которую мы редактировали\n          const idx = this.positions.findIndex( p => p._id === newPosition._id)\n          this.positions[idx] = newPosition\n          MaterialService.toast('Позиция обновленна')\n        },\n        error => {\n          this.form.enable()\n          MaterialService.toast(error.error.message)\n        },\n        () => {\n          this.modal.close()\n          this.form.enable()\n          this.form.reset({name: '', cost: '1'})\n        }\n      )\n    } else {\n      // создаем позицию\n      this.positionsService.create(position).subscribe(\n        newPosition => {\n          MaterialService.toast('Позиция создана')\n          // добавляем позиции в массив для отображения\n          this.positions.push(newPosition)\n        },\n        error => {\n          this.form.enable()\n          MaterialService.toast(error.error.message)\n        },\n        () => {\n          this.modal.close()\n          this.form.enable()\n          this.form.reset({name: '', cost: '1'})\n        }\n      )\n    }\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMtcGFnZS9jYXRlZ29yaWVzLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-title\\\">\\n    <h4>Категории</h4>\\n    <button\\n      class=\\\"waves-effect waves-light btn grey darken-1\\\"\\n      routerLink=\\\"/categories/new\\\"\\n    >Добавить категорию</button>\\n</div>\\n\\n<!-- <div class=\\\"row\\\" *ngIf=\\\"!loading\\\">\\n    <div class=\\\"col s12\\\">\\n        <div class=\\\"collection\\\"> -->\\n          <!-- динамический вывод всех категорий -->\\n            <!-- <a\\n              *ngFor=\\\"let category of categories\\\"\\n              href=\\\"#!\\\" class=\\\"collection-item\\\"\\n            >{{category.name}}</a>\\n        </div>\\n    </div>\\n</div> -->\\n\\n<!-- categories$ | async - стрим пропущен  через пайп асинк тем самы мы подписываемся под этот стрим  потом склыдываем в категории в доступные днном шабоне -->\\n<!-- ; else loader - пока не произошла загрузка показывай лоадер -->\\n<div\\n class=\\\"row\\\"\\n *ngIf=\\\"categories$ | async as categories; else loader\\\"\\n>\\n    <div class=\\\"col s12\\\">\\n      <!-- нужно показывать див если коллекция не пустая -->\\n        <div\\n          class=\\\"collection\\\"\\n          *ngIf=\\\"categories.length  !== 0; else empty\\\"\\n        >\\n          <!-- динамический вывод всех категорий -->\\n            <a\\n              *ngFor=\\\"let category of categories\\\"\\n              [routerLink]=\\\"['/categories', category._id]\\\"\\n              class=\\\"collection-item\\\"\\n            >{{category.name}}</a>\\n        </div>\\n        <!-- если коллекция пустая -->\\n        <ng-template #empty>\\n          <div class=\\\"center\\\">\\n            У вас нет категорий\\n          </div>\\n        </ng-template>\\n    </div>\\n</div>\\n\\n<!-- лоадер не нужно импортировать просто взять имя  -->\\n<!-- <app-loader\\n  *ngIf=\\\"loading\\\"\\n></app-loader> -->\\n\\n\\n<!-- референция на поток -->\\n<ng-template #loader>\\n  <app-loader ></app-loader>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CategoriesService } from '../shared/services/categories.service';\nimport { Category } from '../shared/interfaces';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-categories-page',\n  templateUrl: './categories-page.component.html',\n  styleUrls: ['./categories-page.component.css']\n})\nexport class CategoriesPageComponent implements OnInit {\n\n  // флаг для загрузки лоадера\n  //loading = false\n  //categories: Category[] = []\n\n  //categories$  -переменная rxj стрим и евляется асинхронной\n  categories$: Observable<Category[]>\n\n  constructor(private categoriesService: CategoriesService) { }\n\n  // при создании компонента получаем все категории\n  // ngOnInit() {\n  //   this.loading = true\n  //   this.categoriesService.fetch().subscribe(\n  //     category => {\n  //       this.loading = false\n  //       this.categories = category\n  //       console.log('category', category)\n  //     } )\n  // }\n  ngOnInit() {\n    this.categories$ = this.categoriesService.fetch()\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnktcGFnZS9oaXN0b3J5LWZpbHRlci9oaXN0b3J5LWZpbHRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"filter\\\">\\n  <div class=\\\"fr\\\">\\n      <div class=\\\"col order\\\">\\n          <div class=\\\"input-field inline order-position-input\\\">\\n              <input type=\\\"number\\\" id=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"order\\\">\\n              <label for=\\\"number\\\">Номер заказа</label>\\n          </div>\\n      </div>\\n      <div class=\\\"col filter-pickers\\\">\\n          <div class=\\\"input-field\\\">\\n              <input type=\\\"text\\\" #start>\\n              <label>Начало</label>\\n          </div>\\n\\n          <div class=\\\"input-field\\\">\\n              <input type=\\\"text\\\" #end>\\n              <label>Конец</label>\\n          </div>\\n      </div>\\n  </div>\\n\\n  <button\\n  class=\\\"btn waves-effect wavers-light btn-small\\\"\\n  (click)=\\\"sumbitFilter()\\\"\\n  [disabled]=\\\"!isValid\\\"\\n  >Применить фильтр</button>\\n</div>\\n\"","import { Component, Output, EventEmitter, ViewChild, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Filter } from 'src/app/shared/interfaces';\nimport { MaterialService, MaterialDatepicker } from 'src/app/shared/classes/material.services';\n\n@Component({\n  selector: 'app-history-filter',\n  templateUrl: './history-filter.component.html',\n  styleUrls: ['./history-filter.component.css']\n})\n// export class HistoryFilterComponent implements OnDestroy, AfterViewInit {\n\n//   // мы будтем емити данные после нажаитя на конопку\n//   @Output() onFilter = new EventEmitter<Filter>()\n//   @ViewChild('start') startRef: ElementRef\n//   @ViewChild('end') endRef: ElementRef\n\n//   start: MaterialDatepicker\n//   end: MaterialDatepicker\n//   order: number\n\n//   isValid = true\n\n//   constructor() { }\n\n//   ngOnInit() {\n//   }\n\n//   sumbitFilter() {\n//     const filter: Filter = {}\n\n//     if (this.order) {\n//       filter.order = this.order\n//     }\n\n//     if (this.start.date) {\n//       filter.start = this.start.date\n//     }\n\n//     if(this.end.date) {\n//       filter.end = this.end.date\n//     }\n\n//     // emit - позволять емититеь или передовать другие данные в компоненты\n//     this.onFilter.emit(filter)\n//   }\n\n//   ngOnDestroy(){\n//     this.start.destroy()\n//     this.end.destroy()\n//   }\n//   ngAfterViewInit(){\n//     // инициализации фильтра по дате\n//     // this.validate.bind(this) - потомучто используем ключевое слово this\n//     this.start = MaterialService.initDatepicker(this.startRef, this.validate.bind(this))\n//     this.end = MaterialService.initDatepicker(this.endRef, this.validate.bind(this))\n//   }\n\n//   validate() {\n//     // проверяем интервал между датами начало и конца\n//     // надо получить такое сравнение чтобы начло отсчета небыло больше конца тип 20 сентября и 3 сентября  - false\n//     //  они не выбраны\n//     // this.start.date - undefined\n//     if( !this.start.date || !this.end.date) {\n//       this.validate = true\n//       // возвращяем чтобы небыло работы скрипта дальше\n//       return\n//     }\n\n//     //console.log(this.start.date < this.end.date)\n\n//     this.isValid = this.start.date < this.end.date\n//   }\n// }\n\nexport class HistoryFilterComponent implements OnDestroy, AfterViewInit {\n\n  @Output() onFilter = new EventEmitter<Filter>()\n  @ViewChild('start') startRef: ElementRef\n  @ViewChild('end') endRef: ElementRef\n\n  start: MaterialDatepicker\n  end: MaterialDatepicker\n  order: number\n\n  isValid = true\n\n  ngOnDestroy() {\n    this.start.destroy()\n    this.end.destroy()\n  }\n\n  ngAfterViewInit() {\n    this.start = MaterialService.initDatepicker(this.startRef, this.validate.bind(this))\n    this.end = MaterialService.initDatepicker(this.endRef, this.validate.bind(this))\n  }\n\n  validate() {\n    if (!this.start.date || !this.end.date) {\n      this.isValid = true\n      return\n    }\n\n    this.isValid = this.start.date < this.end.date\n  }\n\n  submitFilter() {\n    const filter: Filter = {}\n\n    if (this.order) {\n      filter.order = this.order\n    }\n\n    if (this.start.date) {\n      filter.start = this.start.date\n    }\n\n    if (this.end.date) {\n      filter.end = this.end.date\n    }\n\n    this.onFilter.emit(filter)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnktcGFnZS9oaXN0b3J5LWxpc3QvaGlzdG9yeS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<table class=\\\"highlight mb2\\\">\\n  <thead>\\n  <tr>\\n      <th>№</th>\\n      <th>Дата</th>\\n      <th>Время</th>\\n      <th>Сумма</th>\\n      <th></th>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n  <tr\\n    *ngFor=\\\"let order of orders\\\"\\n  >\\n  <!-- | date:'dd.MM.yyyy ' - пайпы ангуляра -->\\n      <td>{{order.order}}</td>\\n      <td>{{order.date | date:'dd.MM.yyyy '}}</td>\\n      <td>{{order.date | date:'HH.mm.ss '}}</td>\\n      <td>{{ compudePrice(order) }} руб.</td>\\n      <td>\\n          <button class=\\\"btn btn-small  grey darken-1\\\"\\n            (click)=\\\"selectOrder(order)\\\"\\n          >\\n              <i class=\\\"material-icons\\\">open_in_new</i>\\n          </button>\\n      </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\n<div class=\\\"modal modal-fixed-footer\\\" #modal>\\n  <div class=\\\"modal-content\\\" *ngIf=\\\"selectedOrder\\\">\\n      <h4 class=\\\"mb1\\\">Заказ №{{ selectedOrder.order }}</h4>\\n      <table class=\\\"highlight\\\">\\n          <thead>\\n          <tr>\\n              <th>Имя</th>\\n              <th>Количество</th>\\n              <th>Цена</th>\\n          </tr>\\n          </thead>\\n\\n          <tbody>\\n          <tr *ngFor=\\\"let item of selectedOrder.list\\\"  >\\n              <td>{{ item.name }}</td>\\n              <td>{{ item.quantity }}</td>\\n              <td>{{ item.cost }} руб.</td>\\n          </tr>\\n          </tbody>\\n      </table>\\n      <div class=\\\"order-summary\\\">\\n          <p>Общая стоимость <strong>{{ compudePrice(selectedOrder) }} руб.</strong></p>\\n      </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      <button\\n      class=\\\"modal-action waves-effect waves-black btn-flat\\\"\\n      (click)=\\\"closeModal()\\\"\\n      >Закрыть</button>\\n  </div>\\n</div>\\n\"","import { Component, Input, ViewChild, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Order } from 'src/app/shared/interfaces';\nimport { MaterialInstance, MaterialService } from 'src/app/shared/classes/material.services';\n\n@Component({\n  selector: 'app-history-list',\n  templateUrl: './history-list.component.html',\n  styleUrls: ['./history-list.component.css']\n})\nexport class HistoryListComponent implements  OnDestroy, AfterViewInit {\n\n  @Input() orders: Order[]\n  @ViewChild('modal') modalRef: ElementRef\n\n  selectedOrder: Order\n\n  modal: MaterialInstance\n\n  constructor() { }\n\n  compudePrice(order: Order): number{\n    return order.list.reduce((total,item)=>{\n      return total += item.quantity * item.cost\n    },0)\n  }\n\n  selectOrder(order: Order){\n    this.selectedOrder = order\n    this.modal.open()\n  }\n\n  ngOnDestroy(){\n    this.modal.destroy()\n  }\n  ngAfterViewInit(){\n    this.modal = MaterialService.initModal(this.modalRef)\n  }\n  closeModal(){\n    this.modal.close()\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnktcGFnZS9oaXN0b3J5LXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-title\\\">\\n  <h4>История заказов</h4>\\n  <!-- isFilterVisible - показать фильтер -->\\n  <button\\n    class=\\\"btn btn-small\\\"\\n    (click)=\\\"isFilterVisible = !isFilterVisible\\\"\\n    data-tooltip=\\\"Открыть фильтр\\\"\\n    data-position=\\\"left\\\"\\n    [ngClass]=\\\"{\\n      'active': isFilterVisible,\\n      'red': isFiltered()\\n    }\\\"\\n    #tooltip\\n  >\\n      <i class=\\\"material-icons\\\">filter_list</i>\\n  </button>\\n</div>\\n\\n<!-- onFilter - прослушка события емирае он фильтер -->\\n<app-history-filter\\n*ngIf=\\\"isFilterVisible\\\"\\n(onFilter)=\\\"applyFilter($event)\\\"\\n></app-history-filter>\\n\\n<div *ngIf=\\\"!reloading; else reloadingBlock\\\">\\n\\n    <div *ngIf=\\\"orders.length > 0; else empty\\\">\\n      <app-history-list [orders]=\\\"orders\\\"></app-history-list>\\n      <div\\n        class=\\\"center mb2\\\"\\n        *ngIf=\\\"!noMoreOrders\\\"\\n      >\\n\\n        <button\\n          class=\\\"btn waves-effect grey darken-1 btn-small\\\"\\n          (click)=\\\"loadMore()\\\"\\n          *ngIf=\\\"!loading; else loader\\\"\\n        >Загрузить еще</button>\\n        <ng-template #loader>\\n          <app-loader></app-loader>\\n        </ng-template>\\n      </div>\\n  </div>\\n\\n  <ng-template #empty>\\n    <div class=\\\"center\\\">\\n      Заказов пока нету.\\n    </div>\\n  </ng-template>\\n\\n</div>\\n\\n<ng-template #reloadingBlock>\\n  <app-loader></app-loader>\\n</ng-template>\\n\\n\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MaterialInstance, MaterialService } from '../shared/classes/material.services';\nimport { OrdersService } from '../shared/services/orders.service';\nimport { Subscription } from 'rxjs';\nimport { Order, Filter } from '../shared/interfaces';\n\n// сколько элементов грузим за один раз\nconst STEP = 2\n\n@Component({\n  selector: 'app-history-page',\n  templateUrl: './history-page.component.html',\n  styleUrls: ['./history-page.component.css']\n})\nexport class HistoryPageComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('tooltip') tooltipRef: ElementRef\n  tooltip: MaterialInstance\n  isFilterVisible = false\n  oSub: Subscription\n  orders: Order[] = []\n  // переменная фильтер\n  filter: Filter = {}\n\n  offset = 0\n  limit = STEP\n  // на дизайблед кнопку когда  показаны все заказы и нужно убрать или заблокировать кнопку загрузить еще\n  noMoreOrders = false\n\n  // флаг лоаденг отвечат за загрузку элементов не отвечат за полную загрузку\n  loading = false\n  // лоадер для всей старинцы\n  reloading = false\n\n  constructor( private ordersService: OrdersService) { }\n\n  ngOnInit() {\n    this.reloading = true\n    // длеаем запрос для получения всех резюме\n    // когда загрузится страница\n    this.fetch()\n  }\n\n  // длема отдельной функцией получения всех резюме\n  // будут можество сетуаций когда нужно заргужеть по тербованию резюме\n  private fetch(){\n    // парметры гет запроса\n    // limit - сколько за раз требуется загрузить обьектов\n    // offset - указывает номер страницы - в нашем случае дополенине к существующим элементам\n    // const params = {\n    //   offset: this.offset,\n    //   limit: this.limit\n    // }\n    // в поле парамс получаем поля кторые нужны для фильтрации\n    const params  = Object.assign({},this.filter, {\n      offset: this.offset,\n      limit: this.limit\n    })\n    this.oSub = this.ordersService.fetch(params).subscribe(orders => {\n      // добавляем к общиму массиву итд\n      this.orders = this.orders.concat(orders)\n      // проверяем закончились заказы или нет\n      this.noMoreOrders = orders.length < STEP\n      this.loading = false\n      this.reloading = false\n    })\n  }\n\n  ngOnDestroy(){\n    this.tooltip.destroy()\n    this.oSub.unsubscribe()\n  }\n  ngAfterViewInit(){\n    // передаем референцию на элемент тул типа это фильтер\n    this.tooltip = MaterialService.initTooltip(this.tooltipRef)\n  }\n\n  loadMore(){\n    // это метод показываем индикатор загрузки и оffset\n    this.offset += STEP\n    this.loading = true\n    // и вызываем вывод\n    this.fetch()\n  }\n\n  applyFilter(filter: Filter) {\n    // начинаем фильтрацию с начало и обнуляем массив\n    this.orders = []\n    this.offset = 0\n    this.filter = filter\n    // будте полная перезагрузка все компонентов\n    this.reloading = true\n    // вызываем перевыбор всех копоенетов\n    this.fetch()\n\n  }\n\n  // отображать данные в фильтре\n  isFiltered(): boolean{\n    // если в обьекте фильтр есть какие либо поля то это значит что\n    return Object.keys(this.filter).length !== 0\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form\\n  class=\\\"card\\\"\\n  [formGroup]=\\\"form\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <div class=\\\"card-content\\\">\\n      <span class=\\\"card-title\\\">Войти в систему</span>\\n      <div class=\\\"input-field\\\">\\n          <!-- formControlName должен совпадать с ngOnInit() -->\\n          <!-- [ngClass]=\\\"{''}\\\" будем добавлять класс инвалид  при условии -->\\n          <input\\n            formControlName=\\\"email\\\"\\n            id=\\\"email\\\"\\n            type=\\\"email\\\"\\n            [ngClass]=\\\"{'invalid': form.get('email').invalid && form.get('email').touched}\\\"\\n          >\\n          <label for=\\\"email\\\">Email:</label>\\n          <!-- *ngIf= form.get('email').invalid && form.get('email').touched показывать данный текст если он инвалидный и был уже потроган -->\\n          <span\\n            class=\\\"helper-text red-text\\\"\\n            *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\n          >\\n          <!-- form.get('email') получаем доступ к текущему контролу -->\\n            <span *ngIf=\\\"form.get('email').errors['required']\\\">Заполните поле еmail</span>\\n            <span *ngIf=\\\"form.get('email').errors['email']\\\">Введите корректный email адрес</span>\\n         </span>\\n      </div>\\n      <div class=\\\"input-field\\\">\\n          <input\\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\"\\n            type=\\\"password\\\"\\n            [ngClass]=\\\"{'invalid': form.get('password').invalid && form.get('password').touched}\\\"\\n          >\\n          <label for=\\\"password\\\">Пароль:</label>\\n          <span\\n            class=\\\"helper-text red-text\\\"\\n            *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\n          >\\n            <span *ngIf=\\\"form.get('password').errors['required']\\\">Заполните поле password</span>\\n            <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']['requiredLength']\\\">\\n              Минимальная длинна пароля {{form.get('password').errors['minlength']['requiredLength']}} : ({{form.get('password').errors['minlength']['actualLength']}})\\n            </span>\\n            <span *ngIf=\\\"form.get('password').errors['password']\\\">Введите корректный email адрес</span>\\n          </span>\\n\\n      </div>\\n  </div>\\n  <div class=\\\"card-action\\\">\\n      <!-- [disabled]=\\\"form.invalid\\\" заблокировать если форма не валиданая -->\\n      <button\\n        class=\\\"modal-action btn waves-effect\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"form.invalid || form.disabled\\\"\\n      >Войти</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/services/auth.servisec';\nimport {  Subscription } from 'rxjs';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { MaterialService } from '../shared/classes/material.services';\n\n// Component - декоратор компонента\n// OnInit - этот метод вызывется когда компонент будет проинициализированн\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\n//OnDestroy - после уничтожения компонента - типо временной цикл\nexport class LoginPageComponent implements OnInit, OnDestroy {\n\n  // указываем пременную и передают через воеточение тип FormGroup\n  // Subscription - отвечает за утечку памяти\n  form: FormGroup\n  aSub: Subscription\n\n  // вствляем созданный сервес\n  // дополнительные сервесы Router,ActivatedRoute\n  constructor(private auth: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  // инициализируем\n  // описываем контолы пароль емейл\n  ngOnInit() {\n    this.form = new FormGroup({\n      // значение по умолчанию , валидаторы которые применяются к полю формы\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(2)])\n    })\n\n    // информация о текущем роуте\n    // принимаем переменную типа Params\n    this.route.queryParams.subscribe((params: Params) => {\n      if (params['registered']){\n        MaterialService.toast('Теперь вы можете зайти в сестему используя свои данные')\n      } else if (params['accessDenied']) {\n        // нужно авторизироватся защищеные роуты\n        MaterialService.toast('Для начала сессии авторизируйтесь в системе')\n      } else if(params['sessionFailed']) {\n        MaterialService.toast('Пожалуйста войдите в систему заново')\n      }\n\n    })\n  }\n  ngOnDestroy(){\n    //вызывится после уничтожения компонента логин\n    // отписываемся от стрима на котором подписались для прослушивания события\n    if(this.aSub){\n      this.aSub.unsubscribe()\n    }\n  }\n  // реализуем метод он субмит\n  onSubmit(){\n    // для облегчения нагрузки на сервер чтобы пользователь один раз нажимал когда идет некоторый запрос\n    this.form.disable()\n    // нужно в импортированный метод вставить пользователя\n    // const user = {\n    //   email: this.form.value.email,\n    //   password: this.form.value.password\n    // }\n\n    // subscribe - подписываемся на событие и просматриваем его\n    // aSub - чтобы небыло утечки памяти при subscribe после нажатия кноки\n    this.aSub = this.auth.login(this.form.value).subscribe(\n      () => {\n        console.log('Login success')\n        // импортировали сервес и используем для перехода на другую страницу\n        this.router.navigate(['/overview'])\n      },\n      error => {\n        // подлюченный сервес для ошибок\n        MaterialService.toast(error.error.message)\n        //console.warn(error)\n        // если ошибка влючаем форму\n        this.form.enable()\n      }\n    )\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyLXBhZ2Uvb3JkZXItY2F0ZWdvcmllcy9vcmRlci1jYXRlZ29yaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- если наш стрим прпущен через пайп  если прошел то сделать локальную переменную категориес если нечего нету показывать лоадер-->\\n<div *ngIf=\\\"categories$ | async as categoris; else loader\\\">\\n  <!-- проверка не существования категорий -->\\n  <div class=\\\"frow order-row\\\" *ngIf=\\\"categoris.length !== 0; else empty\\\">\\n    <div\\n      class=\\\"card waves-effect pointer\\\"\\n      *ngFor=\\\"let category of categoris\\\"\\n      [routerLink]=\\\"['/order', category._id]\\\"\\n    >\\n        <div class=\\\"center\\\">\\n            <img\\n              [src]=\\\"category.imageSrc\\\"\\n              class=\\\"responsive-img order-img\\\"\\n            >\\n        </div>\\n        <div class=\\\"card-content center p10\\\">\\n            <h5 class=\\\"m0\\\">{{ category.name }}</h5>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <ng-template #empty>\\n    <div class=\\\"center\\\">У вас отсутствуют категории.</div>\\n  </ng-template>\\n\\n</div>\\n\\n<ng-template #loader>\\n  <app-loader></app-loader>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CategoriesService } from 'src/app/shared/services/categories.service';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-order-categories',\n  templateUrl: './order-categories.component.html',\n  styleUrls: ['./order-categories.component.css']\n})\nexport class OrderCategoriesComponent implements OnInit {\n\n  categories$: Observable<Category[]>\n\n  constructor(private categoriesService: CategoriesService) { }\n\n  ngOnInit() {\n    // в стрим получаем все категории\n    this.categories$ = this.categoriesService.fetch();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyLXBhZ2Uvb3JkZXItcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-title\\\">\\n    <h4 *ngIf=\\\"isRoot\\\">Заказ</h4>\\n    <h4 *ngIf=\\\"!isRoot\\\">\\n        <a routerLink=\\\"/order\\\">Заказ</a>\\n        <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n        Добавить продукцию\\n    </h4>\\n    <button class=\\\"waves-effect btn grey darken-1\\\"\\n     (click)=\\\"open()\\\"\\n     [disabled]=\\\"order.list.length === 0\\\"\\n     >\\n        Оформить\\n    </button>\\n</div>\\n\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n<div #modal class=\\\"modal modal-fixed-footer\\\">\\n  <div class=\\\"modal-content\\\">\\n      <h4 class=\\\"mb1\\\">Ваш заказ</h4>\\n      <table class=\\\"highlight\\\">\\n          <thead>\\n          <tr>\\n              <th>Название</th>\\n              <th>Количество</th>\\n              <th>Цена</th>\\n              <th></th>\\n          </tr>\\n          </thead>\\n\\n          <tbody>\\n            <!-- из массива сервиса ордер который мы инжектировали -->\\n          <tr\\n            *ngFor=\\\"let item of order.list\\\"\\n          >\\n              <td>{{item.name}}</td>\\n              <td>{{item.quantity}}</td>\\n              <td>{{item.cost}} руб.</td>\\n              <td><i class=\\\"material-icons pointer\\\" (click)=\\\"removePosition(item)\\\" >delete</i></td>\\n          </tr>\\n          </tbody>\\n      </table>\\n      <div class=\\\"order-summary\\\">\\n          <p>Общая стоимость <strong>{{order.price}} руб.</strong></p>\\n      </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n      <button\\n        (click)=\\\"cancel()\\\"\\n        class=\\\"modal-action waves-effect waves-black btn-flat\\\"\\n        [disabled]=\\\"panding\\\"\\n      >Отмена</button>\\n      <button\\n        (click)=\\\"submit()\\\" class=\\\"modal-action btn waves-effect\\\"\\n        [disabled]=\\\"order.list.length === 0 || pending\\\"\\n      >Подтвердить</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { MaterialService, MaterialInstance } from '../shared/classes/material.services';\nimport { OrderService } from './order.service';\nimport { OrderPosition, Order } from '../shared/interfaces';\nimport { OrdersService } from '../shared/services/orders.service';\nimport { Subscription } from 'rxjs';\n\n// providers: [OrderService] - Локальная регистарция сервес на компонент\n@Component({\n  selector: 'app-order-page',\n  templateUrl: './order-page.component.html',\n  styleUrls: ['./order-page.component.css'],\n  providers: [OrderService]\n})\n//OnDestroy - уничтожение после перехода старницы\n//AfterViewInit - позволяет рабоать с дом дерево когда сфорируется в деереве\nexport class OrderPageComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('modal') modalRef: ElementRef\n  // для определение на какой странице находимся\n  isRoot: boolean\n  modal: MaterialInstance\n  // блокирование кнопки заказа на одно нажатие\n  panding = false\n  oSub: Subscription\n\n  // по средству роутера проверяем юрл адрес и тем самы отображение хлебных крошек\n  constructor(private router: Router,\n              private order: OrderService,\n              private ordersService: OrdersService ) { }\n\n  ngOnInit() {\n    this.isRoot = this.router.url === '/order'\n    //ставим прослушку события на именения страниц\n    this.router.events.subscribe(\n      event => {\n        // противном случае будет false и будем показывать другое меню\n        // console.log(Event,event)\n        // оптимизация если эвет наследник слава навигатион ентд\n        // в таком случае один раз переопределим эту пременную\n        if(event instanceof NavigationEnd){\n          this.isRoot = this.router.url === '/order'\n        }\n\n      }\n    )\n  }\n\n  ngOnDestroy(){\n    // удаляем модальное окно\n    this.modal.destroy()\n    if(this.oSub){\n      // отприсываемся от потоков\n      this.oSub.unsubscribe()\n    }\n  }\n\n  ngAfterViewInit(){\n    // инициализируем модальное окно\n    this.modal = MaterialService.initModal(this.modalRef)\n  }\n\n  open(){\n    this.modal.open()\n  }\n\n  cancel(){\n    this.modal.close()\n  }\n\n  submit(){\n    this.panding = true\n    // создание нового заказа\n    // должы в листе избавится от айди листа через мап\n    const order: Order = {\n      list: this.order.list.map( item => {\n        // укаждого айтема удаляем поле айди\n        delete item._id\n        return item\n      })\n    }\n    this.oSub = this.ordersService.create(order).subscribe(\n      (newOrder) => {\n        MaterialService.toast(`Заказ добавлен №${newOrder.order}`)\n        this.order.clear()\n      },\n      error => {MaterialService.toast(error.error.message)},\n      () => {\n        this.modal.close()\n        this.panding = true\n      }\n    )\n\n  }\n\n  removePosition(orderPosition: OrderPosition){\n    this.order.remove(orderPosition)\n    MaterialService.toast(`${orderPosition.name} удален.`)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyLXBhZ2Uvb3JkZXItcG9zaXRpb25zL29yZGVyLXBvc2l0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"positions$ | async as positions; else loader\\\">\\n    <table class=\\\"highlight\\\" *ngIf=\\\"positions.length !== 0; else empty\\\">\\n        <thead>\\n        <tr>\\n            <th>Название</th>\\n            <th>Стоимость</th>\\n            <th>Количество</th>\\n            <th></th>\\n        </tr>\\n        </thead>\\n\\n        <tbody>\\n        <tr\\n          *ngFor=\\\"let position of positions\\\"\\n        >\\n            <td>{{position.name}}</td>\\n            <td>{{position.cost}} руб.</td>\\n            <td>\\n                <div class=\\\"input-field inline order-position-input\\\">\\n                  <!-- данный инпут дублируется для каждой определенной позиции добавляем нджимодель-->\\n                  <!-- заводим виртуальное поле в интефесе но на фронтенде quantity-->\\n                    <input type=\\\"number\\\" value=\\\"1\\\" min=\\\"1\\\" [(ngModel)]=\\\"position.quantity\\\">\\n                </div>\\n            </td>\\n            <td>\\n              <!-- данная кнопка будет выключена если у текущий позиции не выбрано поле квантити -->\\n                <button class=\\\"btn waves-effect wavers-light btn-small\\\"\\n                  (click)=\\\"addToOrder(position)\\\"\\n                  [disabled]=\\\"!position.quantity\\\"\\n                >Добавить</button>\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n    <ng-template #empty>\\n        <div class=\\\"center\\\">\\n          В данной категории отсутствуют позиции.\\n        </div>\\n      </ng-template>\\n</div>\\n\\n<ng-template #loader>\\n  <app-loader></app-loader>\\n</ng-template>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PositionsService } from 'src/app/shared/classes/positions.service';\nimport { Position } from 'src/app/shared/interfaces';\nimport { switchMap, map } from 'rxjs/operators';\nimport { OrderService } from '../order.service';\nimport { MaterialService } from 'src/app/shared/classes/material.services';\nimport {Observable} from 'rxjs/index';\n\n@Component({\n  selector: 'app-order-positions',\n  templateUrl: './order-positions.component.html',\n  styleUrls: ['./order-positions.component.css']\n})\nexport class OrderPositionsComponent implements OnInit {\n\n  positions$: Observable<Position[]>\n\n  constructor(private route: ActivatedRoute,\n              private positionsService: PositionsService,\n              private order: OrderService) { }\n\n  ngOnInit() {\n    // проверяем какой сейчас айди\n    this.positions$ = this.route.params\n    .pipe(\n      switchMap(\n        (params: Params) => {\n          // позвращяем позиции по айди категории\n          return this.positionsService.fetch(params['id'])\n        }\n      ),\n      // добавляем оператор мап чтобы добавить начальные данные в интпут количество\n      map(\n        (positions: Position[]) => {\n          // накаждой итерации получаем позиции\n          return positions.map(position => {\n            //каждой позиции по умолчанию добавляем единицу\n            position.quantity = 1\n            return position\n          })\n        }\n      )\n    )\n  }\n\n  // добавляем  в заказ\n  addToOrder(position: Position){\n    //console.log(position)\n    // добавляем новую позицию к заказу\n    this.order.add(position)\n    MaterialService.toast( `${position.name} добавлено.`)\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Position, OrderPosition } from '../shared/interfaces';\r\n\r\n@Injectable()\r\n// сервесы заказа\r\n\r\n// локальный спомогательный класс кторый формирует заказ\r\nexport class OrderService{\r\n  // массив заказов\r\n  public list: OrderPosition[] = []\r\n  //общая цена\r\n  public price = 0\r\n\r\n  add(position: Position){\r\n    // иза не совпадения типов сформируем правильный обьект\r\n    // но возможны мутации в js из за несовпадения ольектов потомушто пеердаем сылки для этого создаем обьект\r\n    // assign спомощью этого метода можем создавать новые обьеты и унаследовать друг от друга\r\n    const orderPosition: OrderPosition = Object.assign({}, {\r\n      name: position.name,\r\n      cost: position.cost,\r\n      quantity: position.quantity,\r\n      _id: position._id\r\n    })\r\n    // проверяем на наличе похожего товара что бы небыло дубликатов\r\n    // ищем на наличе похожих айдишников в листе\r\n    const candidate = this.list.find( p => p._id === position._id)\r\n    if(candidate){\r\n       //изменяем количество\r\n       candidate.quantity += orderPosition.quantity\r\n    } else {\r\n      // до добавляем заказ\r\n      this.list.push(orderPosition)\r\n    }\r\n\r\n    this.computePrice()\r\n\r\n  }\r\n  remove(orderPosition: OrderPosition){\r\n    // удлаение\r\n    // находим элемент из массива и удалем\r\n    const idx = this.list.findIndex(p => p._id === orderPosition._id)\r\n    this.list.splice(idx, 1)\r\n    // пересчитываем цену\r\n    this.computePrice()\r\n  }\r\n  // после отпарвки очищяет сервис\r\n  clear(){\r\n    this.list = []\r\n    this.price = 0\r\n  }\r\n\r\n  // приватный метод высчитывание общей цены\r\n  private computePrice(){\r\n    this.price = this.list.reduce((total, item) => {\r\n      return total += item.quantity * item.cost\r\n    }, 0)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL292ZXJ2aWV3LXBhZ2Uvb3ZlcnZpZXctcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-title\\\">\\n  <h4>\\n    Обзор за вчера\\n    ({{yesterday | date:'dd.MM.yyyy'}})\\n    <i class=\\\"material-icons black-text pointer\\\" (click)=\\\"openInfo()\\\">\\n      info_outline\\n    </i>\\n  </h4>\\n</div>\\n\\n<div\\n  class=\\\"row\\\"\\n  *ngIf=\\\"data$ | async as data; else loader\\\"\\n>\\n  <div class=\\\"col s12 l6\\\">\\n    <div class=\\\"card light-blue lighten-2 white-text\\\">\\n      <div class=\\\"card-content\\\">\\n        <span class=\\\"card-title\\\">Выручка:</span>\\n        <h3>{{data.gain.yesterday}} руб.</h3>\\n        <h3\\n          class=\\\"m0 mb1\\\"\\n          [ngClass]=\\\"{\\n            'green-text text-darken-2': data.gain.isHigher,\\n            'red-text': !data.gain.isHigher\\n          }\\\"\\n        >\\n          <i class=\\\"material-icons\\\">\\n            {{data.gain.isHigher ? 'arrow_upward' : 'arrow_downward'}}\\n          </i>\\n          {{data.gain.percent}}%\\n        </h3>\\n        <p>\\n          Выручка вашего бизнеса вчера на\\n          {{data.gain.percent}}%\\n          {{data.gain.isHigher ? 'выше' : 'ниже'}}\\n          среднего:\\n          {{data.gain.compare}}\\n          руб. в день\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col s12 l6\\\">\\n    <div class=\\\"card orange lighten-2 white-text\\\">\\n      <div class=\\\"card-content\\\">\\n        <span class=\\\"card-title\\\">Заказы:</span>\\n        <h3>{{data.orders.yesterday}} зак.</h3>\\n        <h3\\n          class=\\\"m0 mb1\\\"\\n          [ngClass]=\\\"{\\n            'green-text text-darken-2': data.orders.isHigher,\\n            'red-text': !data.orders.isHigher\\n          }\\\"\\n        >\\n          <i class=\\\"material-icons\\\">\\n            {{data.orders.isHigher ? 'arrow_upward' : 'arrow_downward'}}\\n          </i>\\n          {{data.orders.percent}}%\\n        </h3>\\n        <p>\\n          Число заказов вчера на {{data.orders.percent}}%\\n          {{data.orders.isHigher ? 'выше' : 'ниже'}}\\n          среднего значения:\\n          {{data.orders.compare}}\\n          зак. в день\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #loader>\\n  <app-loader></app-loader>\\n</ng-template>\\n\\n\\n<div class=\\\"tap-target\\\" data-target=\\\"menu\\\" #tapTarget>\\n  <div class=\\\"tap-target-content\\\">\\n    <h5>Зачем нужна эта страница?</h5>\\n    <p>Страница “Обзор” покажет динамику продаж за предыдущий день. Сравнение со средним значениями поможет вам понять, как идут дела у Вашего бизнеса.</p>\\n  </div>\\n</div>\\n\"","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core'\nimport {AnalyticsService} from '../shared/services/analytics.services'\nimport {Observable} from 'rxjs/index'\nimport {OverviewPage} from '../shared/interfaces'\nimport {MaterialInstance, MaterialService} from '../shared/classes/material.services'\n\n@Component({\n  selector: 'app-overview-page',\n  templateUrl: './overview-page.component.html',\n  styleUrls: ['./overview-page.component.css']\n})\nexport class OverviewPageComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('tapTarget') tapTargetRef: ElementRef\n  tapTarget: MaterialInstance\n  data$: Observable<OverviewPage>\n\n  yesterday = new Date()\n\n  constructor(private service: AnalyticsService) {\n  }\n\n  ngOnInit() {\n    this.data$ = this.service.getOverview()\n\n    this.yesterday.setDate(this.yesterday.getDate() - 1)\n  }\n\n  ngAfterViewInit() {\n    this.tapTarget = MaterialService.initTapTarget(this.tapTargetRef)\n  }\n\n  ngOnDestroy() {\n    this.tapTarget.destroy()\n  }\n\n  openInfo() {\n    this.tapTarget.open()\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLXBhZ2UvcmVnaXN0ZXItcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form\\n  class=\\\"card\\\"\\n  [formGroup]=\\\"form\\\"\\n  (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <div class=\\\"card-content\\\">\\n      <span class=\\\"card-title\\\">Создать аккаунт</span>\\n      <div class=\\\"input-field\\\">\\n          <!-- formControlName должен совпадать с ngOnInit() -->\\n          <!-- [ngClass]=\\\"{''}\\\" будем добавлять класс инвалид  при условии -->\\n          <input\\n            formControlName=\\\"email\\\"\\n            id=\\\"email\\\"\\n            type=\\\"email\\\"\\n            [ngClass]=\\\"{'invalid': form.get('email').invalid && form.get('email').touched}\\\"\\n          >\\n          <label for=\\\"email\\\">Email:</label>\\n          <!-- *ngIf= form.get('email').invalid && form.get('email').touched показывать данный текст если он инвалидный и был уже потроган -->\\n          <span\\n            class=\\\"helper-text red-text\\\"\\n            *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\n          >\\n          <!-- form.get('email') получаем доступ к текущему контролу -->\\n            <span *ngIf=\\\"form.get('email').errors['required']\\\">Заполните поле еmail</span>\\n            <span *ngIf=\\\"form.get('email').errors['email']\\\">Введите корректный email адрес</span>\\n         </span>\\n      </div>\\n      <div class=\\\"input-field\\\">\\n          <input\\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\"\\n            type=\\\"password\\\"\\n            [ngClass]=\\\"{'invalid': form.get('password').invalid && form.get('password').touched}\\\"\\n          >\\n          <label for=\\\"password\\\">Пароль:</label>\\n          <span\\n            class=\\\"helper-text red-text\\\"\\n            *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\n          >\\n            <span *ngIf=\\\"form.get('password').errors['required']\\\">Заполните поле password</span>\\n            <span *ngIf=\\\"form.get('password').errors['minlength'] && form.get('password').errors['minlength']['requiredLength']\\\">\\n              Минимальная длинна пароля {{form.get('password').errors['minlength']['requiredLength']}} : ({{form.get('password').errors['minlength']['actualLength']}})\\n            </span>\\n            <span *ngIf=\\\"form.get('password').errors['password']\\\">Введите корректный email адрес</span>\\n          </span>\\n      </div>\\n  </div>\\n  <div class=\\\"card-action\\\">\\n      <!-- [disabled]=\\\"form.invalid\\\" заблокировать если форма не валиданая -->\\n      <button\\n        class=\\\"modal-action btn waves-effect\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"form.invalid || form.disabled\\\"\\n      >Создать</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/services/auth.servisec';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { MaterialService } from '../shared/classes/material.services';\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit,OnDestroy {\n\n  form: FormGroup\n  aSub: Subscription\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)])\n    })\n  }\n\n  ngOnDestroy(){\n    if(this.aSub){\n      this.aSub.unsubscribe()\n    }\n  }\n\n  onSubmit() {\n    this.form.disable()\n    this.aSub = this.auth.register(this.form.value).subscribe(\n      () => {\n        // успешно зарегистрировались можем перейти на страницу логина и войти\n        //queryParams - параметры запроса передаем переменную это переменну проверяем в login-page.component.ts\n        //http://localhost:4200/login?registered=true - редирект с квери параметрами\n        this.router.navigate(['/login'], {\n          queryParams: {\n            registered: true\n          }\n        })\n      },\n      error => {\n        MaterialService.toast(error.error.message)\n        console.warn(error)\n        this.form.enable()\n      }\n    )\n  }\n}\n","\r\nimport { CanActivateChild, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../services/auth.servisec';\r\n\r\n// файл защиты роутов\r\n// providedIn: 'root' - регистрируем сервис\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n//CanActivate CanActivateChild -\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  // имеет ли пользователь токен авторизации и может ли заходить на определнные страницы\r\n  constructor(private auth: AuthService,\r\n    private router: Router) {}\r\n\r\n  // если тру то получить страницу если фалсе то защищять\r\n  canActivate(router: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>{\r\n    // если пользователь зарегистрирован то\r\n    if(this.auth.isAithenticated()){\r\n      //of\r\n      return of(true)\r\n    }else{\r\n      //незарегистрирова то редирект пользователя на страницу с определенным параметром\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          accessDenied: true\r\n        }\r\n      })\r\n      return of(false)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  canActivateChild(router: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>{\r\n    // или route\r\n    return this.canActivate(router, state)\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\ndeclare var M\r\n// для понимаения класса M который унас еподключен\r\n\r\n// интерфес для модального окна\r\nexport interface MaterialInstance {\r\n  open?(): void\r\n  close?(): void\r\n  destroy?(): void\r\n}\r\n\r\n// интерфейс для дата пикера\r\nexport interface MaterialDatepicker extends MaterialInstance {\r\n  date?: Date\r\n}\r\n\r\n\r\n// создаем класс который работает с различными сущностями которые есть в библеотеке материал дизайн\r\nexport class MaterialService {\r\n  static toast(message: string) {\r\n    // будем сообщение выводит на экран\r\n    M.toast({\r\n      html: message\r\n    })\r\n  }\r\n\r\n  // ждем рефененцию\r\n  static initializeFloatingButton(ref: ElementRef) {\r\n\r\n    //ref.nativeElement - в рефенеции лежит элемент который нужен материал дизайну\r\n    M.FloatingActionButton.init(ref.nativeElement)\r\n  }\r\n  // добавляем фокус на импуты\r\n  static updateTextInputs() {\r\n    M.updateTextFields()\r\n  }\r\n\r\n  static initModal(ref: ElementRef): MaterialInstance  {\r\n    // инициализируем модальное окно\r\n    return M.Modal.init(ref.nativeElement)\r\n  }\r\n\r\n  static initTooltip(ref: ElementRef): MaterialInstance {\r\n    return M.Tooltip.init(ref.nativeElement);\r\n  }\r\n\r\n  // метод для инициализации даты\r\n  static initDatepicker(ref: ElementRef, onClose: () => void ): MaterialDatepicker {\r\n    return M.Datepicker.init(ref.nativeElement, {\r\n      format: 'dd.mm.yyyy',\r\n      showClearBtn: true,\r\n      onClose\r\n    })\r\n  }\r\n// для открываеющийся вкладке информация на овервью\r\n  static initTapTarget(ref: ElementRef): MaterialInstance {\r\n    return M.TapTarget.init(ref.nativeElement)\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Position, Message } from '../interfaces';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// сервис для работы с позициями\r\n\r\nexport class PositionsService {\r\n  constructor (private http: HttpClient) {\r\n\r\n  }\r\n  // получить все позици\r\n  fetch(categoryId: string): Observable<Position[]> {\r\n    return this.http.get<Position[]>(`/api/position/${categoryId}`)\r\n  }\r\n  // создать одну позицию\r\n  create(position: Position): Observable<Position>{\r\n    return this.http.post<Position>('/api/position', position)\r\n  }\r\n  // Обновить позицию\r\n  update(position: Position): Observable<Position>{\r\n    return this.http.patch<Position>(`/api/position/${position._id}`, position)\r\n  }\r\n  // удлаение позиций\r\n  delete(position: Position): Observable<Message>{\r\n    return this.http.delete<Message>(`/api/position/${position._id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../services/auth.servisec';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n//Injectable - возможность добавлять некторые в ещи в наш класс\r\n@Injectable()\r\n// interseptor - перехватывает все http запросы и может как то их изменять\r\n// в нашем случае добавлять ко всем запросам token\r\n// export class TokenInterceptor implements HttpInterceptor {\r\n//   constructor(private auth: AuthService, private router: Router) {}\r\n\r\n//   //HttpRequest<any> - будем перехватывать все реквесты которые будут уходить на сервер\r\n//   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n//     // мы должны добавлять авторизайшен хедеры для любого запроса как значение указывать токен\r\n//     // если пользователь зарегистрирован он уже вошел в систему зачит уже есть токен авторизации\r\n//     if(this.auth.isAithenticated()){\r\n//       // обновит текущий реквест чтобы он не мутировал\r\n//       req = req.clone({\r\n//         setHeaders: {\r\n//           Authorization: this.auth.getToken()\r\n//         }\r\n//       })\r\n//     }\r\n//     return next.handle(req).pipe(\r\n//       // данный пайп для обработки ошибки\r\n//       catchError(\r\n//         //HttpErrorResponse - специальный тип для обработки ошибок\r\n//         (error: HttpErrorResponse) => { this.handleAuthError(error)}\r\n//       )\r\n//     )\r\n\r\n//   }\r\n\r\n//   private  handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n//     // попльзователь не имеет токен или неправилльный\r\n//     if(error.status === 401){\r\n//       this.router.navigate(['/login'], {\r\n//         queryParams: {\r\n//           sessionFailed: true\r\n//         }\r\n//       })\r\n//     }\r\n\r\n//     return throwError(error)\r\n//   }\r\n// }\r\n\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private auth: AuthService, private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAithenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: this.auth.getToken()\r\n        }\r\n      })\r\n    }\r\n    return next.handle(req).pipe(\r\n      catchError(\r\n        (error: HttpErrorResponse) => this.handleAuthError(error)\r\n      )\r\n    )\r\n  }\r\n\r\n  private handleAuthError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.status === 401) {\r\n      this.router.navigate(['/login'], {\r\n        queryParams: {\r\n          sessionFailed: true\r\n        }\r\n      })\r\n    }\r\n\r\n    return throwError(error)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 center\\\">\\n    <div class=\\\"preloader-wrapper active\\\">\\n      <div class=\\\"spinner-layer spinner-red-only\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n          <div class=\\\"circle\\\"></div>\\n        </div><div class=\\\"gap-patch\\\">\\n          <div class=\\\"circle\\\"></div>\\n        </div><div class=\\\"circle-clipper right\\\">\\n          <div class=\\\"circle\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent {\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYXlvdXRzL2F1dGgtbGF5b3V0L2F1dGgtbGF5b3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper grey darken-1\\\">\\n      <a routerLink=\\\"/\\\" class=\\\"brand-logo\\\">Newborn</a>\\n      <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n          <!-- routerLinkActive=\\\"active\\\"  если страница совпадает с данным url то добавляем класс актив-->\\n          <li routerLinkActive=\\\"active\\\">\\n            <a routerLink=\\\"/login\\\">Вход</a>\\n          </li>\\n          <li routerLinkActive=\\\"active\\\">\\n            <a routerLink=\\\"/register\\\">Регистрация</a>\\n          </li>\\n      </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"auth-block\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYXlvdXRzL3NpdGUtbGF5b3V0L3NpdGUtbGF5b3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--SIDEBAR-->\\n<ul class=\\\"sidenav sidenav-fixed a-sidenav\\\">\\n  <h4>Newborn</h4>\\n\\n  <!-- выводим динамически ссылки -->\\n  <!-- routerLinkActive=\\\"active\\\" - Добавление активного класса по клику -->\\n  <li\\n    class=\\\"bold\\\"\\n    *ngFor=\\\"let link of links\\\"\\n    routerLinkActive=\\\"active\\\"\\n    >\\n    <a [routerLink]=\\\"[link.url]\\\" href=\\\"#\\\" class=\\\"waves-effect waves-orange\\\">\\n      {{link.name}}\\n    </a>\\n  </li>\\n\\n  <!-- $event - передача событию интему -->\\n  <li class=\\\"bold last\\\">\\n    <a href=\\\"#\\\" class=\\\"waves-effect waves-orange\\\" (click)=\\\"logout($event)\\\">\\n      Выйти\\n    </a>\\n  </li>\\n</ul>\\n<!--CONTENT-->\\n<main class=\\\"content\\\">\\n  <router-outlet></router-outlet>\\n</main>\\n<!--Floating button-->\\n<!-- floating - Локальная референция  -->\\n<div class=\\\"fixed-action-btn\\\" #floating>\\n  <a class=\\\"btn-floating btn-large red\\\">\\n      <i class=\\\"large material-icons\\\">add</i>\\n  </a>\\n  <ul>\\n    <!-- конопка введент на страницу нового заказа -->\\n      <li >\\n        <a class=\\\"btn-floating green\\\" routerLink=\\\"/order\\\">\\n          <i class=\\\"material-icons\\\">assignment</i>\\n        </a>\\n      </li>\\n    <!-- конопка введент на страницу добавление новой категории -->\\n      <li>\\n        <a class=\\\"btn-floating blue\\\" routerLink=\\\"/categories/new\\\">\\n          <i class=\\\"material-icons\\\">list</i>\\n        </a>\\n      </li>\\n  </ul>\\n</div>\\n\\n\\n<a id=\\\"menu\\\" class=\\\"waves-effect waves-light btn btn-floating\\\"><i class=\\\"material-icons\\\">info</i></a>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from '../../services/auth.servisec';\nimport { Router } from '@angular/router';\nimport { MaterialService } from '../../classes/material.services';\n\n@Component({\n  selector: 'app-site-layout',\n  templateUrl: './site-layout.component.html',\n  styleUrls: ['./site-layout.component.css']\n})\n//AfterViewInit - когда зарендерен компонент в дом дерево\nexport class SiteLayoutComponent implements OnInit, AfterViewInit {\n  // забираем опреденный элемент из компонета через дикоратор\n  //floatingRef - перемещяем в переменную которая имеет специальный тип\n  @ViewChild('floating') floatingRef: ElementRef\n  // динамический вывод массива сылок в меню\n\n  links = [\n    {url: '/overview', name: 'Обзор'},\n    {url: '/analytics', name: 'Аналитика'},\n    {url: '/history', name: 'История'},\n    {url: '/order', name: 'Добавление заказа'},\n    {url: '/categories', name: 'Ассортимент'},\n  ]\n\n  // добавляем сервесы инжектируем\n  constructor(private auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n  // время жизни\n  ngAfterViewInit(){\n    // инициализируем флоут кнопку\n    // передаем референцию\n    MaterialService.initializeFloatingButton(this.floatingRef)\n  }\n  // метод выхода\n  logout(event: Event) {\n    // отменяем стандартное поведение евента который мы прередали по сылке тоесть перезагрузка страницы #\n    event.preventDefault()\n    // очищяем сессию\n    this.auth.logaut()\n    this.router.navigate(['/login'])\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AnalyticsPage, OverviewPage } from '../interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalyticsService {\r\n   constructor(private http: HttpClient){}\r\n\r\n  getOverview(): Observable<OverviewPage>{\r\n    return this.http.get<OverviewPage>('/api/analytics/overview')\r\n  }\r\n  getAnalytics(): Observable<AnalyticsPage>{\r\n    return this.http.get<AnalyticsPage>('/api/analytics/analytics')\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../interfaces';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n// файлы сервесов авторизации\r\n\r\n// providedIn - регистрирует сервес в корневом элементе  - ненадо нечего писать в провайдере providers app.module.ts\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  // полученный токен авторизации\r\n  private token = null\r\n\r\n  // инжектируем http клиент для запросов на сервер\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  // функция регистрации в системе\r\n  // при регистрации возвращяем пользователя которого мы создали\r\n  register(user: User): Observable<User> {\r\n    return this.http.post<User>('/api/auth/register', user)\r\n  }\r\n\r\n  // функция захождения в нашу систему\r\n  // User - опсание тип интерфес\r\n  // из функции возвращяют Observable Тип возвращяемых значений <> - сервер возвращяет токен\r\n  login(user: User): Observable<{token: string}> {\r\n    // код по работе с сервером\r\n    return this.http.post<{token: string}>('/api/auth/login', user)\r\n    .pipe(\r\n      // операторы по цепоче вызываются когда работает стрим\r\n      // после того как сделан запрос проводим дейтсвие\r\n      // tap выципляем из стрима\r\n      tap(\r\n        ({token}) => {\r\n          // локал сторедж заносим токен\r\n          localStorage.setItem('auth-token', token)\r\n          // заносим значение токена в приватную переменную\r\n          this.setToken(token)\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  // Данный метод изменяет приватную переменную\r\n  setToken(token: string) {\r\n    this.token = token\r\n  }\r\n  // данный метод возвращяет тип стринг\r\n  getToken(): string {\r\n    return this.token\r\n  }\r\n  // переменная определяет находистя ли в сессии пользователь или нет\r\n  isAithenticated(): boolean {\r\n    return !!this.token\r\n  }\r\n  // выхода из системы логаут\r\n  logaut() {\r\n    // обнуляем занчения токен\r\n    this.setToken(null)\r\n    // обнуляем локал сторендж\r\n    localStorage.clear\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category, Message } from '../interfaces';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// сервис который работает с категориями\r\n\r\nexport class CategoriesService {\r\n  constructor(private http: HttpClient){}\r\n  //получаем список всех категорий\r\n  fetch(): Observable<Category[]>{\r\n    return this.http.get<Category[]>('/api/category')\r\n  }\r\n  // метод получение одной категории по айди\r\n  getById(id:string): Observable<Category>{\r\n    return this.http.get<Category>(`/api/category/${id}`)\r\n  }\r\n  // метод позволяет создавать новые категории\r\n  create(name: string, image?: File): Observable<Category> {\r\n    const fd = new FormData()\r\n    if(image){\r\n      fd.append('image', image, image.name)\r\n    }\r\n    fd.append('name', name)\r\n    return this.http.post<Category>('/api/category', fd)\r\n  }\r\n  // обновление\r\n  update(id: string, name: string, image?: File): Observable<Category> {\r\n    const fd = new FormData()\r\n    if(image){\r\n      fd.append('image', image, image.name)\r\n    }\r\n    fd.append('name', name)\r\n    return this.http.patch<Category>(`/api/category/${id}`, fd)\r\n  }\r\n  // удаление\r\n  delete(id: string): Observable<Message> {\r\n    return this.http.delete<Message>(`/api/category/${id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Order } from '../interfaces';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService{\r\n  constructor(private http: HttpClient){}\r\n  // метод для создания заказа\r\n  create(order: Order): Observable<Order>{\r\n    return this.http.post<Order>('/api/order', order)\r\n  }\r\n  // получение списка всех заказаов\r\n  // мы будте передовать гет параметры для дополнительной загрузки заказов\r\n  // HttpParams - удобно позволяет работать с гет параметрами\r\n  fetch(params: any = {}): Observable<Order[]> {\r\n    return this.http.get<Order[]>('/api/order', {\r\n      params: new HttpParams({\r\n        fromObject: params\r\n      })\r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'materialize-css/dist/js/materialize.js'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}